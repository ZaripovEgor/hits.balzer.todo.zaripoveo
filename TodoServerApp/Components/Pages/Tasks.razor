@page "/"
@rendermode InteractiveServer
@inject IDataService data
@* @attribute [Authorize] *@
@inject NavigationManager navigate

<PageTitle>Задачи</PageTitle>
<h1>Мои задачи</h1>

<div class="container">
    @if (tasks == null)
    {
        <tr>
            <td colspan="5">
                Loading ...
            </td>
        </tr>
    }
    else
    {
        <div class="btn-group m-2">
            <button class="btn btn-primary" @onclick="AddTask">Новая задача</button>
        </div>
        <div class="card-group">
            @foreach (var t in tasks)
            {
                <div class="card">
                    <div class="card-header">
                        @t.Title
                    </div>
                    <div class="card-body">
                        <p>@t.Description</p>
                        <p>@t.CreatedDate</p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-primary" href="tasks/@t.Id">Изменить</a>
                        <button class="btn btn-primary" onclick="async () => await DeleteTask(task.Id)">Удалить</button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    IEnumerable<TaskItem>? tasks;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        tasks = await data.GetAllAsync();
    }

    void AddTask()
    {
        navigate.NavigateTo("tasks/add");
    }

    async Task DeleteTask(int id)
    {
        await data.DeleteAsync(id);
        tasks = await data.GetAllAsync();
    }
}